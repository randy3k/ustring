name: R-CMD-check

on: [push, pull_request]

jobs:
  cleanup:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  rchk:
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    runs-on: ubuntu-latest
    env:
      NOT_CRAN: true
      _R_CHECK_CRAN_INCOMING_: false
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/run-rchk@master
        with:
          apt: libgmp3-dev

  ubsan:
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    runs-on: ubuntu-latest
    container:
      image: rocker/r-devel-ubsan-clang
      options: --cap-add=SYS_PTRACE
    env:
      NOT_CRAN: true
      _R_CHECK_CRAN_INCOMING_: false
    steps:
      - uses: actions/checkout@v1
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: RDscript {0}
      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/R/site-library
          key: ubsan-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ubsan-${{ hashFiles('.github/R-version') }}-1-
      - name: Install libgmp3-dev
        run: |
          apt-get update
          apt-get install libgmp3-dev -y
      - name: Install codetools
        run: RDscript -e "remotes::install_cran('codetools')"
      - name: Install dependencies
        run: |
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "remotes::install_cran('rcmdcheck')"
      - name: Running Tests
        run: |
          RDscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '--no-manual'), error_on = 'warning')"

  rcmdcheck:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v1

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
